#include "Parallel.cpp"
#include <cstdlib>
#include <random>
using namespace std;

int getRandomInt(int lower, int upper) {
    // Seed the random number generator with current time
    std::srand(static_cast<unsigned int>(std::time(nullptr)));
    return std::rand() % (upper - lower + 1) + lower;
}

// do not edit this file
// give dimensions of matrix and then the matrices as input, see product as output
// use this file to check correctness of your implementation of matrix multiplication

int main(int argc, char **argv) {
    int n, m, p;
    cin >> n >> m >> p;
    Matrix* A = new Matrix(n,m);
    Matrix* B = new Matrix(m,p);
    // A->inputMatrix();
    // B->inputMatrix();
    for(int i=0;i<n;i++){
        for(int j=0;j<p;j++){
            A -> M[i][j] = getRandomInt(1, 100);
            B -> M[i][j] = getRandomInt(1, 100);
        }
    }
    auto start = chrono::high_resolution_clock::now();
    Matrix* C = A->multiplyMatrix(B);
    auto end = chrono::high_resolution_clock::now();
    auto elapsed = chrono::duration_cast<chrono::duration<double>>(end - start);
    cout << "Time taken : " << elapsed.count() << "\n";
    C->displayMatrix();
    A->~Matrix();
    B->~Matrix();
    C->~Matrix();
    return 0;
}
